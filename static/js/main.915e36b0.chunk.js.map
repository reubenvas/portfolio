{"version":3,"sources":["components/FullScreenText.js","components/Drawer.js","components/NavigationBar.js","components/AboutMe.js","components/Project.js","App.js","serviceWorker.js","index.js","images/preggy.png","images/park_away.PNG"],"names":["styles","heading","textLength","fontSize","concat","FullScreenText","props","children","className","sentences","split","lines","react_default","a","createElement","Typist_default","cursor","show","onLineTyped","line","lineIdx","push","console","log","length","query","element","document","querySelector","getBoundingClientRect","top","animateScroll","scrollTo","smooth","duration","delay","setTimeout","window","body","style","overflowY","map","s","i","arr","backspaces","key","Backspace","count","SwipeableTemporaryDrawer","state","left","bottom","right","toggleDrawer","side","open","_this","setState","Object","defineProperty","_this2","this","classes","sideList","list","List_default","linkName","ListItem_default","button","ListItemText_default","modules","activeClass","to","spy","onClick","onSetActive","l","test","join","trim","Divider_default","index_esm","io_index_esm","link","comp","ListItemIcon_default","primary","ll","location","href","find","el","target","innerText","Button_default","SwipeableDrawer_default","onClose","onOpen","tabIndex","role","onKeyDown","React","Component","withStyles","root","backgroundColor","width","fullList","isMobileView","innerWidth","NavigationBar","mobileMenu","navColor","boxShadow","adjustNavbarMobile","bool","adjustShadow","shadow","componentDidMount","addEventListener","turnOffIntro","componentWillUnmount","removeEventListener","menu","Drawer","AboutMe","Project","name","picture","description","backgroundImage","App","intro","removeIntro","isFirstTimeVisit","cookies","Cookies","get","date","Date","toLocaleDateString","set","path","components_FullScreenText","components_NavigationBar","components_AboutMe","components_Project","park_away","preggy","Boolean","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.915e36b0.chunk.js","sourcesContent":["import React from 'react'\nimport Typist from 'react-typist';\n\nimport { animateScroll } from 'react-scroll';\n\nfunction scrollTo(query) {\n    let element = document.querySelector(query).getBoundingClientRect().top;\n    console.log(element);\n    element += 0.001;\n    animateScroll.scrollTo(element, { smooth: true, duration: 3000, delay: 500 });\n}\n\n\nconst FullScreenText = props => {\n    const { children, className} = props;\n    const sentences = children.split('#');\n    const lines = [];\n\n    return (\n        <div className={`${className} container--fullscreen`} >\n            <Typist cursor={{ show: false }} onLineTyped={(line, lineIdx) => {\n                lines.push(line);\n                console.log(lines);\n                if (lines.length === 6) {\n                    scrollTo('.Home');\n                    setTimeout(() => window.document.body.style.overflowY = 'visible', 3510)\n\n                }\n            }}>\n                {sentences.map((s, i, arr) => {\n                    const backspaces = arr.length - 1 !== i ? s.length : 0;\n                    return (\n                        <div key={i}>\n                            <h4 style={styles.heading(s.length)}>\n                                <span>{s}</span>\n                                {<Typist.Backspace count={backspaces} delay={500} />}\n                            </h4>\n                        </div>\n                    );\n                })}\n            </Typist>\n        </div>\n    )\n}\n\n\nconst styles = {\n    heading: (textLength) => {\n        const fontSize = 20 - textLength / 3;\n        return {fontSize: `${fontSize}vh`};\n    },\n}\n\nexport default FullScreenText;","// Swipeable Temporary drawer\r\n// You can make the drawer swipeable with the SwipeableDrawer component.\r\n\r\n// This component comes with a 2 kB gzipped payload overhead. Some low-end\r\n// mobile devices won't be able to follow the fingers at 60 FPS. You can use\r\n// the disableBackdropTransition property to help.\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n// import InboxIcon from '@material-ui/icons/MoveToInbox';\r\n// import MailIcon from '@material-ui/icons/Mail';\r\n\r\nimport { FaGithub, FaLinkedinIn } from 'react-icons/fa';\r\nimport { IoIosMail } from \"react-icons/io\";\r\n\r\nimport { Link } from 'react-scroll';\r\n\r\n\r\nconst styles = {\r\n    // fix so that drawer is behind navbar\r\n    root: {\r\n        backgroundColor: 'yellow'\r\n    },\r\n    list: {\r\n        width: 250,\r\n        // 'padding-top': '8vh'\r\n    },\r\n    fullList: {\r\n        width: 'auto',\r\n        // this is not in use\r\n    },\r\n};\r\n\r\nclass SwipeableTemporaryDrawer extends React.Component {\r\n    state = {\r\n        top: false,\r\n        left: false,\r\n        bottom: false,\r\n        right: false,\r\n    };\r\n\r\n    toggleDrawer = (side, open) => () => {\r\n        this.setState({\r\n            [side]: open,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        const sideList = (\r\n            <div className={classes.list}>\r\n                <List>\r\n                    {['Home', 'Projects', 'AboutMe'].map(linkName => (\r\n                        <ListItem button key={linkName}>\r\n                            <ListItemText >\r\n                                <Link\r\n                                    activeClass=\"active\"\r\n                                    to={linkName}\r\n                                    spy={true}\r\n                                    smooth={true}\r\n                                    duration={500}\r\n                                    onClick={this.toggleDrawer('left', false)}\r\n                                    onSetActive={\r\n                                        (linkName) => {\r\n                                            // make the top navbar change color to its background\r\n                                            if (linkName === 'Home') {\r\n                                                // this.adjustShadow('0px 0px 10px 0px rgba(0,0,0,0.75)');\r\n                                                console.log('make shadow on navbar visible and dark')\r\n                                            } else if (linkName === 'Projects') {\r\n                                                console.log('intro is turned off');\r\n                                            } else if (linkName === 'AboutMe') {\r\n                                                // this.adjustShadow('0px 28px 27px 3px rgba(0,0,0,0.75)');\r\n                                                console.log('make shadow even more visble and dark');\r\n                                            }\r\n                                            console.log(`link was pressed: ${linkName}`);\r\n                                        }}\r\n                                    >\r\n                                    {linkName.split('').map(l => /([A-Z])/.test(l) ? ' ' + l : l).join('').trim()}\r\n                                </Link>\r\n                            </ListItemText >\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n                <Divider />\r\n                <List>\r\n                    {[[<FaGithub/>, 'Github'], [<IoIosMail/>, 'E-Mail'], [<FaLinkedinIn/>, 'LinkedIn']].map((link, i) => (\r\n                            <ListItem button key={i}>\r\n                        {link.map((comp, i) => typeof comp !== 'string' ? <ListItemIcon key={i}>{comp}</ListItemIcon> : <ListItemText key={i} primary={comp} onClick={ll => {\r\n                        window.location.href = [['Github', 'https://github.com/reubenvas/'], ['E-Mail', 'mailto: reuben.vas@hotmail.com'], ['LinkedIn', 'https://www.linkedin.com/in/reuben-vas/']].find(el => el[0] === ll.target.innerText)[1];\r\n                        return ll.target.innerText;\r\n                        }}/>)}\r\n                            </ListItem>\r\n                    ))}\r\n                </List>\r\n            </div>\r\n        );\r\n        return (\r\n            <div >\r\n                <Button onClick={this.toggleDrawer('left', true)}>Open Left</Button>\r\n                <SwipeableDrawer\r\n                    open={this.state.left}\r\n                    onClose={this.toggleDrawer('left', false)}\r\n                    onOpen={this.toggleDrawer('left', true)}\r\n                >\r\n                    <div\r\n                        tabIndex={0}\r\n                        role=\"button\"\r\n                        onClick={this.toggleDrawer('left', false)}\r\n                        onKeyDown={this.toggleDrawer('left', false)}\r\n                    >\r\n                        {sideList}\r\n                    </div>\r\n                </SwipeableDrawer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSwipeableTemporaryDrawer.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SwipeableTemporaryDrawer);","import React, { Component } from 'react';\n\nimport { Link } from 'react-scroll';\n\nimport { FaGithub, FaLinkedinIn } from 'react-icons/fa';\nimport { IoIosMail } from \"react-icons/io\";\n\nimport Drawer from './Drawer';\n\nconst isMobileView = () => window.innerWidth < 830 ? true : false;\n\nclass NavigationBar extends Component {\n    state = {\n        mobileMenu: isMobileView(),\n        navColor: '',\n        boxShadow: '',\n    }\n\n    adjustNavbarMobile = () => {\n        const bool = isMobileView();\n        this.setState({ mobileMenu: bool });\n    }\n\n    adjustShadow = (shadow) => {\n        if (this.state.boxShadow !== shadow) {\n            this.setState({ boxShadow: shadow });\n        }\n    }\n\n    componentDidMount = () => {\n        this.adjustNavbarMobile();\n        window.addEventListener('resize', this.adjustNavbarMobile);\n        if (this.state.mobileMenu) this.props.turnOffIntro();\n    }\n    componentWillUnmount = () => {\n        window.removeEventListener('resize', this.adjustNavbarMobile);\n    }\n\n    menu = () => {\n        // ADD LINKS TO MOBILE VIEW AS WELL AND MAKE SHADOW WORK!\n        if (this.state.mobileMenu) {\n            return <Drawer />;\n        }\n        return (\n            <div className=\"navbar-content\">\n                <div className=\"link-container\">\n                    {['Home', 'Projects', 'AboutMe'].map(linkName => (\n                        <Link\n                            activeClass=\"active\"\n                            to={linkName}\n                            spy={true}\n                            smooth={true}\n                            duration={500}\n                            onSetActive={\n                                (linkName) => {\n                                    // make the top navbar change color to its background\n                                    if (linkName === 'Home') {\n                                        this.adjustShadow('0px 0px 10px 0px rgba(0,0,0,0.75)');\n                                    } else if (linkName === 'Projects') {\n                                        this.props.turnOffIntro();\n                                    } else if (linkName === 'AboutMe') {\n                                        this.adjustShadow('0px 28px 27px 3px rgba(0,0,0,0.75)');\n                                    }\n                                    console.log(`link was pressed: ${linkName}`);\n                                }}>\n                            {linkName.split('').map(l => /([A-Z])/.test(l) ? ' ' + l : l).join('').trim()}\n                        </Link>\n                    ))}\n                </div>\n\n                <div className=\"profileLink-container\">\n                    <FaGithub onClick={() => window.location.href = \"https://github.com/reubenvas/\"} />\n                    <IoIosMail onClick={() => window.location.href = \"mailto: reuben.vas@hotmail.com\"} />\n                    <FaLinkedinIn onClick={() => window.location.href = \"https://www.linkedin.com/in/reuben-vas/\"} />\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        console.log(this.state.navColor);\n\n        return (\n            <nav className=\"navbar-container\" style={{ backgroundColor: this.state.navColor, boxShadow: this.state.boxShadow }}>\n                {this.menu()}\n            </nav>\n        );\n\n    }\n}\n\nexport default NavigationBar;","import React from 'react';\n\nconst AboutMe = () => (\n    <div className=\"AboutMe\">\n        <h1>Who Am I?</h1>\n        <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Dolorem sequi totam blanditiis nostrum accusamus deleniti, corporis ipsum voluptate ducimus repellendus eveniet sint, aliquid consectetur quod quis exercitationem, dolore reprehenderit velit. Deserunt iste doloremque deleniti, distinctio ea voluptate repudiandae veritatis ad aut rerum.</p>\n        <br />\n        <p>Cupiditate fuga, minima placeat sit ad exercitationem soluta eos tempore doloremque, in quis, praesentium porro reprehenderit explicabo saepe voluptatum maiores quos tempora. Nisi, nihil? A non praesentium ullam quibusdam vel perspiciatis, harum facere recusandae, culpa eaque inventore repellat illum quae modi consequatur corporis quo? Iusto officiis labore rerum esse deserunt nemo illo id at, consectetur voluptate aliquid voluptatum?</p>\n    </div>\n)\n\nexport default AboutMe;","import React from 'react';\n\n\nconst Project = (props) => {\n    const { name, picture, description } = props;\n\n\n    // CHANGE SO THAT URL TO BACKGROUND IMAGE IS NOT HARD CODED\n    return (\n        <div className=\"project\">\n        <div className=\"initial-background\" />\n            <div className=\"project-background\" style={{backgroundImage: `url(${picture})`}}/>\n            <div className=\"filter-color\" />\n            <div className=\"project-text\">\n            <h2>{name}</h2>\n            <p>{description}</p>\n            <div className=\"buttons-container\">\n                <button className=\"project-btn\">View App</button>\n                <button className=\"project-btn\">View Code</button>\n            </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Project;","import React, { Component } from 'react';\nimport './App.css';\n\nimport Cookies from 'universal-cookie';\n\nimport FullScreenText from './components/FullScreenText';\nimport NavigationBar from './components/NavigationBar';\nimport AboutMe from './components/AboutMe';\nimport Project from './components/Project';\n\nimport preggy from './images/preggy.png';\nimport park_away from './images/park_away.PNG';\n\n\nclass App extends Component {\n  state = {\n    intro: true,\n  }\n\n  removeIntro = () => {\n    this.setState({ intro: false });\n  }\n\n  isFirstTimeVisit = () => {\n    const cookies = new Cookies();\n\n    if (!cookies.get('welcome')) {\n\n      const date = (new Date()).toLocaleDateString();\n      cookies.set('welcome', date, { path: '/' });\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n\n    const Intro = () => {\n      if (this.isFirstTimeVisit() && this.state.intro) {\n        return (\n          <FullScreenText className='Intro'>Hi! #My name is Reuben. #I'm a Fullstack JavaScript Developer!</FullScreenText>\n        );\n      }\n      window.document.body.style.overflowY = 'visible';\n      return <div />;\n    }\n\n    return (\n      <main className=\"App\">\n        <Intro />\n        <div className='Home' /* set either class or name to target of link */>\n          <div className='home-picture'>\n            <article className='text--home'>\n              <p className='intro'>I design & build digital solutions.</p>\n              <p className='name'>Reuben Vas</p>\n            </article>\n          </div>\n        </div>\n        <div className='space' />\n        <NavigationBar turnOffIntro={this.removeIntro}/>\n        <div className='space' />\n        <AboutMe />\n        <div className=\"Projects\">\n          <h1>Latest Works</h1>\n          <div className=\"projects-container\">\n            <Project name=\"Park Away\" picture={park_away} description=\"Extraordinary login- and logout app for parking.\"/>\n            <Project name=\"Preggy\" picture={preggy} description=\"Sensational ios- and android app for following your pregnancy.\"/>\n            <Project name=\"Project-Name\" picture='preggy' description=\"Project-Description\"/>\n          </div>\n        </div>\n        <footer>\n          <p>this is a footer</p>\n        </footer>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/preggy.0ca33563.png\";","module.exports = __webpack_public_path__ + \"static/media/park_away.218a73e3.PNG\";"],"sourceRoot":""}